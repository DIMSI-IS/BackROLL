version: "3.9"

services:

  database:
    image: mariadb:10.3
    volumes:
      - database:/var/lib/mysql/
    env_file:
      - database.env
  
  redis:
    image: redis:7.2
    command: "redis-server"

  sso:
    build: ./sso
    env_file:
      - sso/_.env

  proxy:
    build: ./proxy
    env_file:
      - proxy/_.env
    ports:
      - 127.0.0.1:2222:2222

  setup:
    build: ./setup
    volumes:
      - ./setup/src:/app/src:ro
      - .:/app/backroll-dev

  api:
    build: ../src/core
    command: "python3 run.py"
    volumes:
      - ../src/core:/usr/src/app
      - ./api/ssh:/root/.ssh
    env_file:
      - core.env
    expose:
      - 5050
    depends_on:
      setup:
        condition: service_completed_successfully
      redis:
        condition: service_started
      # database:
      #   condition: service_healthy
    # Compensates for the lack of database healthcheck.
    restart: on-failure

  worker_primary:
    build: ../src/core
    command: bash worker_primary.command.sh
    volumes:
      - ./worker_primary/ssh:/root/.ssh
      - storage:/mnt/storage
      - ../src/core:/usr/src/app
    env_file:
      - core.env
    depends_on:
      setup:
        condition: service_completed_successfully
      api:
        condition: service_started

  worker_secondary:
    build: ../src/core
    command: bash worker_secondary.command.sh
    volumes:
      - ./worker_secondary/ssh:/root/.ssh
      - storage:/mnt/storage
      - ../src/core:/usr/src/app
    env_file:
      - core.env
    depends_on:
      setup:
        condition: service_completed_successfully
      api:
        condition: service_started
      worker_primary:
        condition: service_started

  flower:
    build: ../src/core
    command: celery -A app.celery flower --conf=flowerconfig.py --loglevel=info
    volumes:
      - ../flower:/root/flower
      - ../src/core:/usr/src/app
    env_file:
      - core.env
    expose:
      - 5555
    depends_on:
      - api
      - worker_primary

  beat:
    build: ../src/core
    command: celery -A app.celery beat -S redbeat.RedBeatScheduler --loglevel=info
    volumes:
      - ../src/core:/usr/src/app
    env_file:
      - core.env
    depends_on:
      - api
      - worker_secondary

  front:
    build:
      context: ../src/ui
      dockerfile: dev.Dockerfile
    volumes:
      - ../src/ui/src:/app/src
    env_file:
      - front.env
    depends_on:
      - api

volumes:
  database:
  storage:
