name: backroll # you probably want to 'snapcraft register <name>'
base: core24
version: "0.1"
summary: Backup and restore your KVM VMs # 79 char long summary
description: |
  Manage and schedule backups of your KVM or Apache CloudStack VMs in a web UI.
  Monitor the backups tasks, get notified on success or failure and restore as needed.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

apps:
  redis:
    command: usr/bin/redis-server
    daemon: simple
    restart-condition: always

  api:
    command: wrappers/api.sh
    daemon: simple
    restart-condition: always
    plugs:
      - mnt

  worker-one:
    command: wrappers/worker_one.sh
    daemon: simple
    restart-condition: always
    plugs:
      - mnt

  worker-two:
    command: wrappers/worker_two.sh
    daemon: simple
    restart-condition: always
    plugs:
      - mnt

  beat:
    command: wrappers/beat.sh
    daemon: simple
    restart-condition: always

  flower:
    command: wrappers/flower.sh
    daemon: simple
    restart-condition: always

  ui:
    command: wrappers/ui.sh
    daemon: simple
    restart-condition: always

parts:
  redis:
    plugin: nil
    stage-snaps:
      - redis

  core:
    source: src/core
    build-packages:
      - pkg-config
      - libssl-dev
      - liblz4-dev
      - libzstd-dev
      - libxxhash-dev
      - libacl1-dev
      - libvirt-dev
    stage-packages:
      - libvirt-dev
      - qemu-utils

    plugin: python
    python-requirements:
      - requirements.txt

  ui:
    plugin: nil
    source: src/ui
    build-packages:
      - nodejs
      - npm
    override-build: |
      export NODE_OPTIONS=--openssl-legacy-provider
      npm install --legacy-peer-deps
      npm run build

      src=dist
      dst="$SNAPCRAFT_PART_INSTALL/ui/"
      mkdir -p "$dst"
      cp -r "$src"/* "$dst"/

      cp nginx.conf "$SNAPCRAFT_PART_INSTALL/etc/nginx/conf.d/ui.conf"
    stage-packages:
      - gettext
      - nginx

  server:
    plugin: nil
    source: src/server
    override-build: |
      cp nginx.conf $SNAPCRAFT_PART_INSTALL/etc/nginx/conf.d/server.conf
    stage-packages:
      - nginx

  snap-src:
    source: snap_project/src
    plugin: dump

# Binding must start with $SNAP, $SNAP_DATA or $SNAP_COMMON.
layout:
  /etc/nginx:
    # Configuration was placed here during build.
    bind: $SNAP/etc/nginx
  /var/lib/nginx:
    bind: $SNAP_DATA/var/lib/nginx
  /var/log/nginx:
    bind: $SNAP_DATA/var/log/nginx
  /usr/share/nginx/html:
    bind: $SNAP_DATA/usr/share/nginx/html

# File plugs may conflict with the layout.
plugs:
  mnt:
    interface: system-files
    write:
      - /mnt
